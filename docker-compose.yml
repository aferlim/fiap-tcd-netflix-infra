version: "3.6"

services:
  consul_server:
    build:
      context: consul_server
      dockerfile: Dockerfile
    image: consul_server
    # restart: always
    tty: true
    ports:
      - 8300:8300
      - 8301:8301
      - 8302:8302
      - 8400:8400
      - 8500:8500
    environment:
      - NODE=consul_server
      - PRIVATE_IP_ADDRESS=33.10.0.2
    volumes:
      - ./consul_server/data:/data
    networks:
      - netflix_tcd_network
        # ipv4_address: 33.10.0.2
  rating_api_1:
    image: aferlim/rating-api:v1
    # restart: always
    tty: true
    ports:
      - 8080:8080
    environment:
      - NODE=rating_api_1
      - PRIMARY=1
      - PRIVATE_IP_ADDRESS=33.10.0.10
      - PORT=8080
    depends_on:
      - consul_server
    networks:
      - netflix_tcd_network
        # ipv4_address: 33.10.0.10
  rating_api_2:
    image: aferlim/rating-api:v1
    restart: always
    tty: true
    ports:
      - 8081:8080
    environment:
      - NODE=rating_api_2
      - PRIMARY=1
      - PRIVATE_IP_ADDRESS=33.10.0.11
      - PORT=8080
    depends_on:
      - consul_server
    networks:
      - netflix_tcd_network
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - .//kafka/zookeeper/data:/data
      - ./kafka/zookeeper/datalog:/datalog
    networks:
      - netflix_tcd_network
  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/kafka/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - netflix_tcd_network
  genre_api_1:
    image: laerccius/genre-api-tcd:third-push
    tty: true
    ports:
      - 8090:80
      - 8091:443
    environment:
      - NODE=genre_api_1
      - PRIMARY=1
      - PRIVATE_IP_ADDRESS=33.10.0.13
    # dns:
    #   - 127.0.0.1
    #   - 8.8.8.8
    #   - 8.8.4.4
    depends_on:
      - consul_server
    # volumes:
    #   - ./django:/web
    # cap_add:
    #   - NET_ADMIN
    networks:
      - netflix_tcd_network
  help_center_api_1:
    image: laerccius/help-center-api-tcd:third-push
    tty: true
    ports:
      - 9000:80
      - 9001:443
    environment:
      - NODE=help_center_1
      - PRIMARY=1
      - PRIVATE_IP_ADDRESS=33.10.0.14
    # dns:
    #   - 127.0.0.1
    #   - 8.8.8.8
    #   - 8.8.4.4
    depends_on:
      - consul_server
    # volumes:
    #   - ./django:/web
    # cap_add:
    #   - NET_ADMIN
    networks:
      - netflix_tcd_network
networks:
  netflix_tcd_network:
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 33.10.0.0/16
